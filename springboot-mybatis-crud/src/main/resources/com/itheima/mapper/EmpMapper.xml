<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.itheima.mapper.EmpMapper">

<!--    <sql>：定义可重用的SQL片段-->
    <sql id="commonSelect">
        select id, username, password, name, gender, image, job, entrydate, dept_id, create_time, update_time
        from emp
    </sql>

    <!--动态更新员工-->
    <update id="updateEmp2">
        update emp
        <set>
            <if test="username != null">username = #{username},</if>
            <if test="name != null">name = #{name},</if>
            <if test="gender != null">gender = #{gender},</if>
            <if test="image != null">image = #{image},</if>
            <if test="job != null">job = #{job},</if>
            <if test="entrydate != null">entrydate = #{entrydate},</if>
            <if test="deptId != null">dept_id = #{deptId},</if>
            <if test="updateTime != null">update_time = #{updateTime}</if>
        </set>
        where id = #{id}
    </update>

    <!--    XML文件的名称与Mapper接口名称一致,并且放置在相同包下(同包同名)
        XML文件的namespace属性为Mapper接口全限定名一致。
        XML文件中sql语句的id与Mapper接口中的方法名一致。-->

    <!-- resultType：单条记录所封装的类型   -->
    <select id="list" resultType="com.itheima.pojo.Emp">
<!--        <include>：通过属性refid，指定包含的SQL片段-->
        <include refid="commonSelect"></include>
        <!--动态条件查询：
            <if>：用于判断条件是否成立。使用test属性进行条件判断，如果条件为true，则拼接SQL.
            <where>：where元素只会在子元素有内容的情况下才插入where子句。而且会自动去除子句开头的AND或OR。-->
        <where>
            <if test="name != null">
                name like concat('%', #{name}, '%')
            </if>
            <if test="gender != null">
                and gender = #{gender}
            </if>
            <if test="startDate != null and endDate != null">
                and entrydate between #{startDate} and #{endDate}
            </if>
        </where>
        order by update_time desc
    </select>

    <!--collection: 集合名称
    item:集合遍历出来的元素/项
    separator: 每一次遍历使用的分隔符
    open:遍历开始前拼接的片段
    close: 遍历结束后拼接的片段-->
   <delete id="deleteByIds">
        delete from emp where id in
            <foreach collection="ids" item="id" separator="," open="(" close=")">
                #{id}
            </foreach>
    </delete>

</mapper>